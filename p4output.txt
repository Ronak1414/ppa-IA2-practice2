 gcc -g p4original.c
 gdb ./a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./a.out...done.
(gdb) b main
Breakpoint 1 at 0x8ae: file p4original.c, line 135.
(gdb) r
Starting program: /home/runner/ppa-IA2-practice2/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p4original.c:135
135 {
(gdb) n
137   n=input_array_size();
(gdb) s
input_array_size () at p4original.c:99
99  {
(gdb) n
101   printf("How many numbers do you want to enter:- ");
(gdb) n
102   scanf("%d",&x);
(gdb) n
How many numbers do you want to enter:- 2
103   return x;
(gdb) n
104 }
(gdb) n
main () at p4original.c:138
138   int a[n];
(gdb) n
139   input_array(n,a);
(gdb) s
input_array (n=2, a=0x7fff0ded0ce0)
    at p4original.c:109
109   for(i=0;i<n;i++)
(gdb) n
111     printf("Enter %dth number:- ",i+1);
(gdb) n
112     scanf("%d",&a[i]);
(gdb) n
Enter 1th number:- 1
109   for(i=0;i<n;i++)
(gdb) n
111     printf("Enter %dth number:- ",i+1);
(gdb) n
112     scanf("%d",&a[i]);
(gdb) n
Enter 2th number:- 5
109   for(i=0;i<n;i++)
(gdb) n
114 }
(gdb) n
main () at p4original.c:140
140   result=sum_composite(n,a);
(gdb) s
sum_composite (n=2, a=0x7fff0ded0ce0)
    at p4original.c:117
117   int k,i,sum=0,count=0 ;
(gdb) n
118   for(i=0;i<n;i++)
(gdb) n
120     for(k=1;a[i]%k==0 && k<a[i];k++)
(gdb) n
124     if(count>2)
(gdb) p count
$1 = 0
(gdb) n
118   for(i=0;i<n;i++)
(gdb) n
120     for(k=1;a[i]%k==0 && k<a[i];k++)
(gdb) n
122       count=count+1;
(gdb) p count
$2 = 0
(gdb) n
120     for(k=1;a[i]%k==0 && k<a[i];k++)
(gdb) n
124     if(count>2)
(gdb) n
118   for(i=0;i<n;i++)
(gdb) n
128   return sum;
(gdb) p sum
$3 = 0
(gdb) n
129 }
(gdb) n
main () at p4original.c:141
141   output(result);
(gdb) n
142   return 0;
(gdb) s
143 }(gdb) n
__libc_start_main (
    main=0x555bc080089d <main>, argc=1, 
    argv=0x7fff0ded0e28, 
    init=<optimized out>, 
    fini=<optimized out>, 
    rtld_fini=<optimized out>, 
    stack_end=0x7fff0ded0e18)
    at ../csu/libc-start.c:344
344 ../csu/libc-start.c: No such file or directory.
(gdb) n
Sum of all composite numbers is 0[Inferior 1 (process 123) exited normally]
(gdb) n
The program is not being run.
(gdb) n
The program is not being run.
(gdb) n
The program is not being run.
(gdb) 
